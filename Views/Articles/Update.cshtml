@model OBGpgm.Models.Article
@inject SignInManager<ApplicationUser> signInManager;
@{
    ViewData["Title"] = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h1>Update Article</h1>

    <h4>Article</h4>
    <hr />

    <form asp-action="Update">
        <div class="row">
            <div class="form-group col-md-4">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <h4><label asp-for="authId" class="control-label"></label></h4>
                    <input asp-for="authId" class="form-control" readonly="readonly" />
                    <span asp-validation-for="authId" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group col-md-4">
                <div id="addButton">
                    <h4><label class="control-label">Add photos below:</label></h4>
                    <a class="btn btn-primary" asp-route-articleId="@Model.articleId"
                       asp-route-id="0"
                       asp-controller="Photos" asp-action="Upload">Upload Photo</a>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                <h4><label asp-for="category" class="control-label"></label></h4>
                @if (User.IsInRole("Admin"))
                {
                    <select asp-for="category" asp-items="Html.GetEnumSelectList<articleCategory>()" 
                            readonly="readonly" class="form-control">
                        <option selected="selected" value="">Please select</option>
                    </select>
                }
                else
                {
                    <input asp-for="category" class="form-control" readonly="readonly" />
                }
                <span asp-validation-for="category" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <h4><label asp-for="topic" class="control-label"></label></h4>
                <select asp-for="topic" asp-items="Html.GetEnumSelectList<articleTopic>()"  
                        readonly="readonly" class="form-control">
                    <option selected="selected" value="">Please select</option>
                </select>
                <span asp-validation-for="topic" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                <h4><label asp-for="title" class="control-label"></label></h4>
                <input asp-for="title" class="form-control" />
                <span asp-validation-for="title" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <h4><label asp-for="slug" class="control-label"></label></h4>
                <input asp-for="slug" class="form-control" />
                <span asp-validation-for="slug" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                <div class="form-group">
                    <h4><label asp-for="itemBody" class="control-label"></label></h4>
                    @Html.TextAreaFor(e => e.itemBody, 10, 55, null)
                    <span asp-validation-for="itemBody" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="topItem" value="false" />
                    <strong>@Html.DisplayNameFor(model => model.topItem)</strong>
                </label>
                <span asp-validation-for="topItem" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label class="form-check-label">
                    <input id="published" class="form-check-input" asp-for="isPublished" value="false" />
                    <strong>@Html.DisplayNameFor(model => model.isPublished)</strong>
                </label>
                <span asp-validation-for="isPublished" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                <h4><label asp-for="pubDate" class="control-label"></label></h4>
                <input asp-for="pubDate" class="form-control" readonly="readonly" />
                <span asp-validation-for="pubDate" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <h4><label asp-for="lastModified" class="control-label"></label></h4>
                <input asp-for="lastModified" class="form-control" readonly="readonly" />
                <span asp-validation-for="lastModified" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </form>
    <div>
        <a asp-action="List">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
</div>
